// <auto-generated />
using System;
using BLVGestao.Data.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BLVGestao.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BLVGestao.Domain.Model.ContaReceber", b =>
                {
                    b.Property<int>("ContaReceberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("ContaReceberId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("ContaReceber");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("EnderecoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Estoque", b =>
                {
                    b.Property<int>("EstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal");

                    b.HasKey("EstoqueId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.FormaDePagamento", b =>
                {
                    b.Property<int>("FormaDePagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PrazoRecebimento")
                        .HasColumnType("int");

                    b.HasKey("FormaDePagamentoId");

                    b.ToTable("FormasDePagamento");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.GrupoAcesso", b =>
                {
                    b.Property<int>("GrupoAcessoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Permissao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("GrupoAcessoId");

                    b.ToTable("GrupoAcesso");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.ItemVenda", b =>
                {
                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("VendaId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensVenda");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Movimentacao", b =>
                {
                    b.Property<int>("MovimentacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimento")
                        .HasColumnType("int");

                    b.HasKey("MovimentacaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3);

                    b.Property<decimal>("ValorCusto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13);

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTelefone")
                        .HasColumnType("int");

                    b.HasKey("TelefoneId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<int>("GrupoAcessoId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UsuarioId");

                    b.HasIndex("GrupoAcessoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("FormaDePagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("VendaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FormaDePagamentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Cliente", b =>
                {
                    b.HasBaseType("BLVGestao.Domain.Model.Pessoa");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12);

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Fornecedor", b =>
                {
                    b.HasBaseType("BLVGestao.Domain.Model.Pessoa");

                    b.Property<string>("Cnpj")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasDiscriminator().HasValue("Fornecedor");
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.ContaReceber", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Cliente", "Cliente")
                        .WithOne("ContaReceber")
                        .HasForeignKey("BLVGestao.Domain.Model.ContaReceber", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLVGestao.Domain.Model.Venda", "Venda")
                        .WithMany("ContasReceber")
                        .HasForeignKey("ContaReceberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Endereco", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Pessoa", "Pessoa")
                        .WithMany("Endereco")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Estoque", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.ItemVenda", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Produto", "Produto")
                        .WithMany("ItensVendas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLVGestao.Domain.Model.Venda", "Venda")
                        .WithMany("ItensVendas")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Movimentacao", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Produto", "Produto")
                        .WithMany("Movimentacao")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Produto", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Telefone", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Pessoa", "Pessoa")
                        .WithMany("Telefone")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Usuario", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.GrupoAcesso", "GrupoAcesso")
                        .WithMany("Usuarios")
                        .HasForeignKey("GrupoAcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLVGestao.Domain.Model.Venda", b =>
                {
                    b.HasOne("BLVGestao.Domain.Model.Cliente", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLVGestao.Domain.Model.FormaDePagamento", "FormaDePagamento")
                        .WithMany("Vendas")
                        .HasForeignKey("FormaDePagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLVGestao.Domain.Model.Usuario", "Usuario")
                        .WithMany("Vendas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
